library(dplyr)
library(ggformula)


# https://www.data.gouv.fr/fr/datasets/donnees-de-laboratoires-infra-departementales-durant-lepidemie-covid-19/#_
tab_spf_com_brute <- 
  data.table::fread("https://www.data.gouv.fr/fr/datasets/r/c2e2e844-9671-4f81-8c81-1b79f7687de3")

tab_spf_com <- 
tab_spf_com %>% 
  # slice(1:10) %>% 
  mutate(date_debut = as.Date(substr(semaine_glissante, 1, 10))) %>% 
  # mutate(across(ends_with("classe"), sub, pattern = "[", replacement = "")) %>% 
  # mutate(across(ends_with("classe"), sub, pattern = "]", replacement = ""))
  tidyr::separate(col = td_classe, into = c("tx_depistage_min", "tx_depistage_max"), sep = ";") %>% 
  tidyr::separate(col = tp_classe, into = c("tx_positivite_min", "tx_positivite_max"), sep = ";") %>% 
  tidyr::separate(col = ti_classe, into = c("tx_incidence_min", "tx_incidence_max"), sep = ";") %>% 
  mutate(across(starts_with("tx_"), readr::parse_number))

# Taux de dépistage (TD)
# pour 100000 habitants
# Taux de positivité (TP)
# (en %)
# Taux d’incidence (TI)
# pour 100000 habitants

# niveau iris -------------
tab_spf_iris_brute <- 
  data.table::fread("https://www.data.gouv.fr/fr/datasets/r/44d4c265-24c3-4720-9144-f3e4a5213422")


tab_spf_iris <- 
  tab_spf_iris_brute %>% 
  # slice(1:10) %>% 
  mutate(date_debut = as.Date(substr(semaine_glissante, 1, 10))) %>% 
  # mutate(across(ends_with("classe"), sub, pattern = "[", replacement = "")) %>% 
  # mutate(across(ends_with("classe"), sub, pattern = "]", replacement = ""))
  tidyr::separate(col = td_classe, into = c("tx_depistage_min", "tx_depistage_max"), sep = ";") %>% 
  tidyr::separate(col = tp_classe, into = c("tx_positivite_min", "tx_positivite_max"), sep = ";") %>% 
  tidyr::separate(col = ti_classe, into = c("tx_incidence_min", "tx_incidence_max"), sep = ";") %>% 
  mutate(across(starts_with("tx_"), readr::parse_number))

# zonages ---------------------------
ref_zonages <- 
  rio::import("https://www.insee.fr/fr/statistiques/fichier/2028028/table-appartenance-geo-communes-20_zonages20.zip",
              skip = 5) %>% 
  rename_with(tolower)

# table populations iris 2017 -------------------
tab_pop_iris <- 
  rio::import("https://www.insee.fr/fr/statistiques/fichier/4799309/base-ic-evol-struct-pop-2017.zip", 
              skip = 5) %>% 
  rename_with(tolower)


# calculs niveau AAV -------------

tab_AAV <- 
  tab_spf_com %>% 
  # filtre age
  filter(clage_65 == 0) %>% 
  select(-clage_65) %>% 
  # ajout pop17
  merge(tab_pop_iris %>% 
          group_by(com) %>% 
          summarise(pop17 = sum(p17_pop, na.rm = TRUE)) %>% 
          ungroup %>% 
          rename(com2020 = com),
        by = "com2020") %>% 
  # comptage par AAV
  mutate(aav = factor(com2020,
                      levels = ref_zonages$codgeo,
                      labels = ref_zonages$aav2020) %>% 
           as.character()) %>% 
  mutate(dom_metro = ifelse(substr(com2020, 1, 2) > "95", "dom", "metro")) %>% 
  group_by(dom_metro, aav) %>% 
  # summarise(across(where(is.numeric), 
  #                  sum, na.rm = TRUE)) 
  summarise(pop17_aav = sum(pop17, na.rm = TRUE),
            tx_incidence_min = sum(tx_incidence_min * pop17, na.rm = TRUE) / pop17_aav
            )
    
  
  
  
# carte AAV ----  
  # install.packages("oceanis")

# zonage AAV -----------------
shp_aav <-
  sf::read_sf("fonds_carte/aav20_francemetro_2020.shp")

# carte AAV ---------------
tab_AAV %>% 
  filter(dom_metro == "metro") %>% 
  as.data.frame() %>% 
  # oceanis::plot_classes(
  oceanis::leaflet_classes(
    fondMaille = shp_aav,
    idData = "aav",
    varRatio = "tx_incidence_min"
  )
